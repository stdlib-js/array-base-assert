{
  "version": 3,
  "sources": ["../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-read-only-property' );\n\n\n// MAIN //\n\n/**\n* Namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name contains\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/assert/contains}\n*/\nsetReadOnly( ns, 'contains', require( '@stdlib/array-base-assert-contains' ) );\n\n/**\n* @name hasAlmostEqualValues\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/assert/has-almost-equal-values}\n*/\nsetReadOnly( ns, 'hasAlmostEqualValues', require( '@stdlib/array-base-assert-has-almost-equal-values' ) );\n\n/**\n* @name hasEqualValues\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/assert/has-equal-values}\n*/\nsetReadOnly( ns, 'hasEqualValues', require( '@stdlib/array-base-assert-has-equal-values' ) );\n\n/**\n* @name hasEqualValuesIndexed\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/assert/has-equal-values-indexed}\n*/\nsetReadOnly( ns, 'hasEqualValuesIndexed', require( '@stdlib/array-base-assert-has-equal-values-indexed' ) );\n\n/**\n* @name hasSameValues\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/assert/has-same-values}\n*/\nsetReadOnly( ns, 'hasSameValues', require( '@stdlib/array-base-assert-has-same-values' ) );\n\n/**\n* @name isAccessorArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/assert/is-accessor-array}\n*/\nsetReadOnly( ns, 'isAccessorArray', require( '@stdlib/array-base-assert-is-accessor-array' ) );\n\n/**\n* @name isBooleanDataType\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/assert/is-boolean-data-type}\n*/\nsetReadOnly( ns, 'isBooleanDataType', require( '@stdlib/array-base-assert-is-boolean-data-type' ) );\n\n/**\n* @name isBooleanArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/assert/is-booleanarray}\n*/\nsetReadOnly( ns, 'isBooleanArray', require( '@stdlib/array-base-assert-is-booleanarray' ) );\n\n/**\n* @name isByteOrder\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/assert/is-byte-order}\n*/\nsetReadOnly( ns, 'isByteOrder', require( '@stdlib/array-base-assert-is-byte-order' ) );\n\n/**\n* @name isComplexFloatingPointDataType\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/assert/is-complex-floating-point-data-type}\n*/\nsetReadOnly( ns, 'isComplexFloatingPointDataType', require( '@stdlib/array-base-assert-is-complex-floating-point-data-type' ) );\n\n/**\n* @name isComplexTypedArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/assert/is-complex-typed-array}\n*/\nsetReadOnly( ns, 'isComplexTypedArray', require( '@stdlib/array-base-assert-is-complex-typed-array' ) );\n\n/**\n* @name isComplex64Array\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/assert/is-complex64array}\n*/\nsetReadOnly( ns, 'isComplex64Array', require( '@stdlib/array-base-assert-is-complex64array' ) );\n\n/**\n* @name isComplex128Array\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/assert/is-complex128array}\n*/\nsetReadOnly( ns, 'isComplex128Array', require( '@stdlib/array-base-assert-is-complex128array' ) );\n\n/**\n* @name isDataType\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/assert/is-data-type}\n*/\nsetReadOnly( ns, 'isDataType', require( '@stdlib/array-base-assert-is-data-type' ) );\n\n/**\n* @name isFloatingPointDataType\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/assert/is-floating-point-data-type}\n*/\nsetReadOnly( ns, 'isFloatingPointDataType', require( '@stdlib/array-base-assert-is-floating-point-data-type' ) );\n\n/**\n* @name isIntegerDataType\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/assert/is-integer-data-type}\n*/\nsetReadOnly( ns, 'isIntegerDataType', require( '@stdlib/array-base-assert-is-integer-data-type' ) );\n\n/**\n* @name isMostlySafeDataTypeCast\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/assert/is-mostly-safe-data-type-cast}\n*/\nsetReadOnly( ns, 'isMostlySafeDataTypeCast', require( '@stdlib/array-base-assert-is-mostly-safe-data-type-cast' ) );\n\n/**\n* @name isNumericDataType\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/assert/is-numeric-data-type}\n*/\nsetReadOnly( ns, 'isNumericDataType', require( '@stdlib/array-base-assert-is-numeric-data-type' ) );\n\n/**\n* @name isRealDataType\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/assert/is-real-data-type}\n*/\nsetReadOnly( ns, 'isRealDataType', require( '@stdlib/array-base-assert-is-real-data-type' ) );\n\n/**\n* @name isRealFloatingPointDataType\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/assert/is-real-floating-point-data-type}\n*/\nsetReadOnly( ns, 'isRealFloatingPointDataType', require( '@stdlib/array-base-assert-is-real-floating-point-data-type' ) );\n\n/**\n* @name isSafeDataTypeCast\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/assert/is-safe-data-type-cast}\n*/\nsetReadOnly( ns, 'isSafeDataTypeCast', require( '@stdlib/array-base-assert-is-safe-data-type-cast' ) );\n\n/**\n* @name isSameKindDataTypeCast\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/assert/is-same-kind-data-type-cast}\n*/\nsetReadOnly( ns, 'isSameKindDataTypeCast', require( '@stdlib/array-base-assert-is-same-kind-data-type-cast' ) );\n\n/**\n* @name isSignedIntegerDataType\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/assert/is-signed-integer-data-type}\n*/\nsetReadOnly( ns, 'isSignedIntegerDataType', require( '@stdlib/array-base-assert-is-signed-integer-data-type' ) );\n\n/**\n* @name isSortedAscending\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/assert/is-sorted-ascending}\n*/\nsetReadOnly( ns, 'isSortedAscending', require( '@stdlib/array-base-assert-is-sorted-ascending' ) );\n\n/**\n* @name isUnsignedIntegerDataType\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/assert/is-unsigned-integer-data-type}\n*/\nsetReadOnly( ns, 'isUnsignedIntegerDataType', require( '@stdlib/array-base-assert-is-unsigned-integer-data-type' ) );\n\n\n// EXPORTS //\n\nmodule.exports = ns;\n"],
  "mappings": "aA0BA,IAAIA,EAAc,QAAS,yCAA0C,EAUjEC,EAAK,CAAC,EASVD,EAAaC,EAAI,WAAY,QAAS,oCAAqC,CAAE,EAS7ED,EAAaC,EAAI,uBAAwB,QAAS,mDAAoD,CAAE,EASxGD,EAAaC,EAAI,iBAAkB,QAAS,4CAA6C,CAAE,EAS3FD,EAAaC,EAAI,wBAAyB,QAAS,oDAAqD,CAAE,EAS1GD,EAAaC,EAAI,gBAAiB,QAAS,2CAA4C,CAAE,EASzFD,EAAaC,EAAI,kBAAmB,QAAS,6CAA8C,CAAE,EAS7FD,EAAaC,EAAI,oBAAqB,QAAS,gDAAiD,CAAE,EASlGD,EAAaC,EAAI,iBAAkB,QAAS,2CAA4C,CAAE,EAS1FD,EAAaC,EAAI,cAAe,QAAS,yCAA0C,CAAE,EASrFD,EAAaC,EAAI,iCAAkC,QAAS,+DAAgE,CAAE,EAS9HD,EAAaC,EAAI,sBAAuB,QAAS,kDAAmD,CAAE,EAStGD,EAAaC,EAAI,mBAAoB,QAAS,6CAA8C,CAAE,EAS9FD,EAAaC,EAAI,oBAAqB,QAAS,8CAA+C,CAAE,EAShGD,EAAaC,EAAI,aAAc,QAAS,wCAAyC,CAAE,EASnFD,EAAaC,EAAI,0BAA2B,QAAS,uDAAwD,CAAE,EAS/GD,EAAaC,EAAI,oBAAqB,QAAS,gDAAiD,CAAE,EASlGD,EAAaC,EAAI,2BAA4B,QAAS,yDAA0D,CAAE,EASlHD,EAAaC,EAAI,oBAAqB,QAAS,gDAAiD,CAAE,EASlGD,EAAaC,EAAI,iBAAkB,QAAS,6CAA8C,CAAE,EAS5FD,EAAaC,EAAI,8BAA+B,QAAS,4DAA6D,CAAE,EASxHD,EAAaC,EAAI,qBAAsB,QAAS,kDAAmD,CAAE,EASrGD,EAAaC,EAAI,yBAA0B,QAAS,uDAAwD,CAAE,EAS9GD,EAAaC,EAAI,0BAA2B,QAAS,uDAAwD,CAAE,EAS/GD,EAAaC,EAAI,oBAAqB,QAAS,+CAAgD,CAAE,EASjGD,EAAaC,EAAI,4BAA6B,QAAS,yDAA0D,CAAE,EAKnH,OAAO,QAAUA",
  "names": ["setReadOnly", "ns"]
}
